name: Deploy to Azure Spring Apps and Container Apps

on:
  push:
    branches: ["azure"]

env:
  AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }} # define this secret in GitHub secrets
  SPRING_APPS_SERVICE: ${{ secrets.SPRING_APPS_SERVICE }} # define this secret in GitHub secrets
  CONTAINER_APPS_ENV: ${{ secrets.CONTAINER_APPS_ENV }} # define this secret in GitHub secrets
  CONTAINER_APPS_RG: ${{ secrets.CONTAINER_APPS_RG }} # define this secret in GitHub secrets
  CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }} # define this secret in GitHub secrets
  KEYVAULT: ${{ secrets.KEY_VAULT }} # define this secret in GitHub secrets

  # ==== APPS ====:
  API_GATEWAY: api-gateway
  ADMIN_SERVER: admin-server
  CUSTOMERS_SERVICE: customers-service
  VETS_SERVICE: vets-service
  VISITS_SERVICE: visits-service

  # ==== JARS ====:
  API_GATEWAY_JAR: spring-petclinic-api-gateway-2.5.1.jar
  ADMIN_SERVER_JAR: spring-petclinic-admin-server-2.5.1.jar
  CUSTOMERS_SERVICE_JAR: spring-petclinic-customers-service-2.5.1.jar
  VETS_SERVICE_JAR: spring-petclinic-vets-service-2.5.1.jar
  VISITS_SERVICE_JAR: spring-petclinic-visits-service-2.5.1.jar

  # ==== JAR BUILD PATHS ====:
  API_GATEWAY_JAR_BUILD_PATH: spring-petclinic-api-gateway/target
  ADMIN_SERVER_JAR_BUILD_PATH: spring-petclinic-admin-server/target
  CUSTOMERS_SERVICE_JAR_BUILD_PATH: spring-petclinic-customers-service/target
  VETS_SERVICE_JAR_BUILD_PATH: spring-petclinic-vets-service/target
  VISITS_SERVICE_JAR_BUILD_PATH: spring-petclinic-visits-service/target
  
jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
        
    - name: Checkout your repo
      uses: actions/checkout@v2
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: maven build, clean
      run: |
        mvn clean package -DskipTests -Denv=cloud

    - name: Gather build artifacts into single directory
      run: |
        mkdir artifacts
        cp ${{ env.API_GATEWAY_JAR_BUILD_PATH }}/${{ env.API_GATEWAY_JAR }} artifacts/
        cp ${{ env.ADMIN_SERVER_JAR_BUILD_PATH }}/${{ env.ADMIN_SERVER_JAR }} artifacts/
        cp ${{ env.CUSTOMERS_SERVICE_JAR_BUILD_PATH }}/${{ env.CUSTOMERS_SERVICE_JAR }} artifacts/
        cp ${{ env.VETS_SERVICE_JAR_BUILD_PATH }}/${{ env.VETS_SERVICE_JAR }} artifacts/
        cp ${{ env.VISITS_SERVICE_JAR_BUILD_PATH }}/${{ env.VISITS_SERVICE_JAR }} artifacts/

    - name: Upload built JAR files as an artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: petclinic-jars
        path: artifacts
        if-no-files-found: error
        retention-days: 7

  deploy-api-server:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:

    - name: Login with Key Vault SP (scoped to Resource Group)
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download JAR files to deploy
      uses: actions/download-artifact@v3.0.0
      with:
        name: petclinic-jars

    - name: deploy
      uses: azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_APPS_SERVICE }}
        app-name: ${{ env.API_GATEWAY }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.API_GATEWAY_JAR }}
        jvm-options: -Xms2048m -Xmx2048m -Dspring.profiles.active=mysql

  deploy-admin-server:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:

    - name: Login with Key Vault SP (scoped to Resource Group)
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download JAR files to deploy
      uses: actions/download-artifact@v3.0.0
      with:
        name: petclinic-jars

    - name: deploy
      uses:  azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_APPS_SERVICE }}
        app-name: ${{ env.ADMIN_SERVER }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.ADMIN_SERVER_JAR }}
        jvm-options: -Xms2048m -Xmx2048m -Dspring.profiles.active=mysql

  deploy-customer-service:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:

    - name: Login with Key Vault SP (scoped to Resource Group)
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download JAR files to deploy
      uses: actions/download-artifact@v3.0.0
      with:
        name: petclinic-jars

    - name: deploy
      uses: azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_APPS_SERVICE }}
        app-name: ${{ env.CUSTOMERS_SERVICE }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.CUSTOMERS_SERVICE_JAR }}
        jvm-options: -Xms2048m -Xmx2048m -Dspring.profiles.active=mysql,key-vault -Dazure.keyvault.uri=https://${{ env.KEYVAULT }}.vault.azure.net/


  deploy-vets-service:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:

    - name: Login with Key Vault SP (scoped to Resource Group)
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download JAR files to deploy
      uses: actions/download-artifact@v3.0.0
      with:
        name: petclinic-jars

    - name: deploy
      uses: azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_APPS_SERVICE }}
        app-name: ${{ env.VETS_SERVICE }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.VETS_SERVICE_JAR }}
        jvm-options: -Xms2048m -Xmx2048m -Dspring.profiles.active=mysql,key-vault -Dazure.keyvault.uri=https://${{ env.KEYVAULT }}.vault.azure.net/

  deploy-visits-service:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:

    - name: Login with Key Vault SP (scoped to Resource Group)
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download JAR files to deploy
      uses: actions/download-artifact@v3.0.0
      with:
        name: petclinic-jars

    - name: deploy
      uses: azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_APPS_SERVICE }}
        app-name: ${{ env.VISITS_SERVICE }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.VISITS_SERVICE_JAR }}
        jvm-options: -Xms2048m -Xmx2048m -Dspring.profiles.active=mysql
        # Environment variables to be entered using the syntax '-key value'. Values containing spaces should be enclosed in double quotes.
        jvm-options: -Xms2048m -Xmx2048m -Dspring.profiles.active=mysql,key-vault -Dazure.keyvault.uri=https://${{ env.KEYVAULT }}.vault.azure.net/


  deploy-to-Container-Apps:

    runs-on: ubuntu-latest
    needs: deploy-to-Spring-Apps
    
    steps:
    - name: Login with SP
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download JAR files to deploy
      uses: actions/download-artifact@v3.0.0
      with:
        name: petclinic-jars

    - name: Build api-gateway container image
      run: docker build . --file docker/Dockerfile-aca --tag "${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.API_GATEWAY }}:v1.0.${{ github.run_number }}" --build-arg PORT=8080 --build-arg JAR_FILE=${{ env.API_GATEWAY_JAR }}

    - name: Login to the Azure Container Registry  
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.CONTAINER_REGISTRY }}.azurecr.io
        username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
    
    - name: Push the api-gateway container image to ACR
      run: |
        docker push "${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.API_GATEWAY }}:v1.0.${{ github.run_number }}"

    - name: Deploy apps to Container App
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt

          echo Deploy app-gateway
          az containerapp create \
            --name ${{ env.API_GATEWAY }} \
            --resource-group ${{ env.CONTAINER_APPS_RG }} \
            --image "${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.API_GATEWAY }}:v1.0.${{ github.run_number }}" \
            --environment ${{ env.CONTAINER_APPS_ENV }} \
            --registry-server ${{ env.CONTAINER_REGISTRY }}.azurecr.io \
            --registry-username ${{ secrets.CONTAINER_REGISTRY_USERNAME }} \
            --registry-password ${{ secrets.CONTAINER_REGISTRY_PASSWORD }} \
            --min-replicas 1 \
            --max-replicas 1 \
            --cpu 1 \
            --memory 2.0Gi \
            --env-vars VETS_SERVICE_URL=https://${{ env.SPRING_APPS_SERVICE }}-${{ env.VETS_SERVICE }}.azuremicroservices.io \
                       VISITS_SERVICE_URL=https://${{ env.SPRING_APPS_SERVICE }}-${{ env.VISITS_SERVICE }}.azuremicroservices.io \
                       CUSTOMERS_SERVICE_URL=https://${{ env.SPRING_APPS_SERVICE }}-${{ env.CUSTOMERS_SERVICE }}.azuremicroservices.io
                       